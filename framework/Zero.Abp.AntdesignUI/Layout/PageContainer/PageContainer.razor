@namespace Zero.Abp.AntdesignUI.Layout
@inherits AntLayoutComponentBase

<div style="@Style" class="@ContainerClassName">
    <!-- #region Header -->
    @*if (pageHeaderRender === false) { return null;  }
        if (pageHeaderRender) {  return <> {pageHeaderRender({ ...props, ...value })}</>;   }*@

    @if (HasPageHeader)
    {
        if (Settings.FixedHeader)
        {
            <Affix OffsetTop="OffsetTop">
                @PageHeaderDom()
            </Affix>
        }
        else
        {
            @PageHeaderDom()
        }
    }
    <!-- #endregion -->
    <!-- #region Content -->
    @if (Loading.IsT1)
    {
        @Loading.AsT1
    }
    else
    {
        @if (Loading.IsT0 && Loading.AsT0 == false)
        {
            <div class="@($"{PrefixedClassName}-children-content")">
                <PageAlert />
                @ChildContent
            </div>
            @if (Value?.HasFooterToolbar ?? false)
            {
                <div style="height:48px;margin-top:24px" />
            }
        }
        else
        {
            SpinProps spin = Loading.IsT2 ? Loading.AsT2 : new SpinProps();
            <PageLoading Size="@spin.Size" Tip="@spin.Tip" Spinning="@spin.Spinning" Delay="@spin.Delay" />
        }
    }
    <!-- #endregion -->
    <!-- #region Footer -->
    @if (HasFooter)
    {
        <FooterToolbar> @Footer </FooterToolbar>
    }
    <!-- #endregion -->
</div>
@code {
    private bool HasFooter => Footer != null;
    //private bool HasBreadCrumb => false;
    private bool HasPageHeader => AnyNoNull(
         Header, Title, TitleContent, BreadcrumbContent, Extra
        , Content
        , ExtraContent
        );

    private int OffsetTop => ((Value?.HasHeader ?? false) && FixedHeader) ? Settings.HeaderHeight : 0;

    RenderFragment PageHeaderContent => Content == null && ExtraContent == null ? null :
    @<div class="@($"{PrefixedClassName}-detail")">
        <div class="@($"{PrefixedClassName}-main")">
            <div class="@($"{PrefixedClassName}-row")">
                @if (Content != null)
                    {
                        <div class="@($"{PrefixedClassName}-content")">@Content</div>
                    }
                    @if (ExtraContent != null)
                    {
                        <div class="@($"{PrefixedClassName}-extraContent")">@ExtraContent</div>
                    }
                </div>
            </div>
        </div>;

    RenderFragment PageHeaderFooter => TabList.IsNullOrEmpty() ? null :
    @<Tabs Class="@($"{PrefixedClassName}-tabs")"
           OnTabClick="HandleTabClick"
           ActiveKey="@TabActiveKey"
           Type="@TabProps.Type"
           HideAdd="@TabProps.HideAdd"
           OnEdit="@TabProps.OnEdit"
           TabBarExtraContent="@TabBarExtraContent">
        @foreach (var item in TabList)
            {
                <TabPane Key="@item.Key" Tab="@item.Tab" Closable="@item.Closable" Disabled="@item.Disabled" />
            }
        </Tabs>;


    RenderFragment PageHeaderDom()
    {
        if (Header != null)
        {
            Title = Header.Title.IsT0 ? Header.Title.AsT0 : Title;
            TitleContent = Header.Title.IsT1 ? Header.Title.AsT1 : TitleContent;
            Ghost = Header.Ghost || Ghost;
            Extra = Header.Extra ?? Extra;
            BreadcrumbContent = Header.Breadcrumb ?? BreadcrumbContent;
        }
        return @<div class=@($"{PrefixedClassName}-warp")>
        <PageHeader Title="@Title"
                Ghost="@Ghost"
                TitleTemplate="@TitleContent"
                PageHeaderExtra="@Extra"
                PageHeaderBreadcrumb="@BreadcrumbContent"
                PageHeaderContent="@PageHeaderContent"
                PageHeaderFooter="@PageHeaderFooter">
        </PageHeader>
    </div>;
    }
}