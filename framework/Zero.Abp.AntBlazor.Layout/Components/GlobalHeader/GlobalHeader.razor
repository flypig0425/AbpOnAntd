@namespace Zero.Abp.AntBlazor.Layout
@inherits AntLayoutComponentBase

<div class="@className" style="@Style">
    @if (IsMobile)
    {
        <div class="@BaseClassName-logo">
            <Branding HideTitle />
        </div>
        @if (CollapsedButtonRender != null)
        {
            <span class="@BaseClassName-collapsed-button" style="cursor:pointer"
                  @onclick="@(async () => { await HandleCollapse(!Collapsed); })">
                @CollapsedButtonRender(Collapsed)
            </span>
        }
    }
    else if (IsMixLayout)
    {
        <div class="@BaseClassName-logo">
            <Branding />
        </div>
    }
    <div style="flex: 1">@ChildContent</div>
    @if (RightContentRender != null)
    {
        @RightContentRender
    }
    else
    {
        <HeaderRight />
    }
</div>

@code{
    #region Collapsed--[@bind-Collapsed,OnCollapse]
    [Parameter] public bool Collapsed { get; set; }
    [Parameter] public EventCallback<bool> CollapsedChanged { get; set; }
    [Parameter] public EventCallback<bool> OnCollapse { get; set; }
    private async Task HandleCollapse(bool collapsed)
    {
        Collapsed = collapsed;
        if (OnCollapse.HasDelegate) { await OnCollapse.InvokeAsync(collapsed); }
        if (CollapsedChanged.HasDelegate) { await CollapsedChanged.InvokeAsync(collapsed); }
    }
    #endregion



    [Parameter] public RenderFragment RightContentRender { get; set; }

    [Parameter] public bool IsMobile { get; set; }


    [Parameter] public RenderFragment<bool> CollapsedButtonRender { get; set; } = defaultCollapsedButtonRender;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    static readonly RenderFragment<bool> defaultCollapsedButtonRender = collapsed =>
    @<Icon Type="@(collapsed ? "menu-unfold" : "menu-fold")" Theme="outline" />;

    private string BaseClassName => $"{PrefixCls}-global-header";
    private string className => ClassNames(BaseClassName, Class
    , ($"{BaseClassName}-layout-{Settings.Layout}", Settings.Layout != null && Settings.HeaderTheme == MenuTheme.Dark.Name)
    );

}