@page "/identity/roles"
@attribute [Authorize(IdentityPermissions.Roles.Default)]
@using Volo.Abp.Identity
@using Microsoft.AspNetCore.Authorization
@using Zero.Abp.AntBlazorUI.Components.ExtensibleDataTable
@using Zero.Abp.PermissionManagement.Blazor.Components
@using Volo.Abp.Identity.Localization
@using Zero.Abp.AspNetCore.Components.Web
@using Zero.Abp.AspNetCore.Components.Web.Theming
@using Zero.Abp.AntBlazorUI.Components.ObjectExtending
@inject AbpBlazorMessageLocalizerHelper<IdentityResource> LH

@inherits AbpCrudPageBase<IIdentityRoleAppService, IdentityRoleDto, Guid, GetIdentityRolesInput, IdentityRoleCreateDto, IdentityRoleUpdateDto>

<PageContainer Title="@L["Roles"]">
    <AbpExtensibleDataTable TItem="IdentityRoleDto"
                            Data="@Entities"
                            ReadData="@OnDataGridReadAsync"
                            TotalItems="@TotalCount"
                            ShowPager="true"
                            PageSize="@PageSize"
                            CurrentPage="@CurrentPage"
                            Toolbar="@RoleManagementTableToolbar"
                            Columns="@RoleManagementTableColumns">
    </AbpExtensibleDataTable>
</PageContainer>

@* ************************* CREATE MODAL ************************* *@
@if (HasCreatePermission)
{
    <Modal Title="@L["NewRole"]"
       Visible="@CreateVisible"
       OnOk="@CreateEntityAsync"
       OnCancel="CloseCreateModalAsync"
       CancelText="@L["Cancel"].Value"
       ConfirmLoading="@CreateSubmiting"
       Centered MaskClosable="@false">
        <Form @ref="CreateFormRef" Model="@NewEntity" Loading="@CreateLoading"
          LabelColSpan="4" WrapperColSpan="20" >
            <FormItem Label="@L["DisplayName:RoleName"]">
                <Input @bind-Value="@context.Name" AutoFocus="true" />
            </FormItem>
            <ExtensionProperties TEntityType="IdentityRoleCreateDto" TResourceType="IdentityResource" Entity="@NewEntity" LH="@LH" />
            <FormItem>
                <Checkbox @bind-Value="@context.IsDefault">@L["DisplayName:IsDefault"]</Checkbox>
                <Checkbox @bind-Value="@context.IsPublic">@L["DisplayName:IsPublic"]</Checkbox>
            </FormItem>
        </Form>
    </Modal>
}
@* ************************* EDIT MODAL ************************* *@
@if (HasUpdatePermission)
{
    <Modal Title="@L["Edit"]"
       Visible="@EditVisible"
       OnOk="@UpdateEntityAsync"
       OnCancel="CloseEditModalAsync"
       CancelText="@L["Cancel"].Value"
       ConfirmLoading="@CreateSubmiting"
       Centered MaskClosable="@false">
        <Form @ref="EditFormRef" Model="@EditingEntity" Loading="@EditLoading"
           LabelColSpan="4" WrapperColSpan="20">
            <input type="hidden" name="ConcurrencyStamp" @bind-value="EditingEntity.ConcurrencyStamp" />
            <FormItem Label="@L["DisplayName:RoleName"]">
                <Input @bind-Value="@context.Name" AutoFocus="true" />
            </FormItem>
            <ExtensionProperties TEntityType="IdentityRoleUpdateDto" TResourceType="IdentityResource" Entity="@EditingEntity" LH="@LH" />
            <FormItem>
                <Checkbox @bind-Value="@context.IsDefault">@L["DisplayName:IsDefault"]</Checkbox>
                <Checkbox @bind-Value="@context.IsPublic">@L["DisplayName:IsPublic"]</Checkbox>
            </FormItem>
        </Form>
    </Modal>
}

@if (HasManagePermissionsPermission)
{
    <PermissionManagementModal @ref="PermissionManagementModal" />
}