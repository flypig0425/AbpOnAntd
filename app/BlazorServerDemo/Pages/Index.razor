@page "/"
@inherits AbpComponentBase
@inject IUiPageProgressService pageProgressService

@using Volo.Abp.UI.Navigation
@inject IMenuManager MenuManager

   <Button Type="default" OnClick="OnClick">
        Display a loading indicator
    </Button>
@*<Captcha ImagesPath="@ImagesPath" ImagesName="@ImagesName" @ref="Captcha" OnValid="@OnValid" />*@

@code {
    public string ImagesPath { get; set; } = "images";
    public string ImagesName { get; set; } = "Pic.jpg";

    ///// <summary>
    /////
    ///// </summary>
    //private Captcha Captcha { get; set; }

    //private void OnValid(bool ret)
    //{
    //    var result = ret ? "成功" : "失败";
    //    Alerts.Warning($"验证码结果 -> {result}");
    //    if (ret)
    //    {
    //        Task.Run(async () =>
    //        {
    //            await Task.Delay(1000);
    //            Captcha?.Reset();
    //        });
    //    }
    //}
     private async Task OnClick()
    {
        var cofig = new MessageConfig()
        {
            Content = "Action in progress..",
            Duration = 0
        };
        var task =  Message.Loading("This is a Loading message", o => o.Duration =0);
        await Task.Delay(5000);
        task.Start();
    }
    protected override async Task OnInitializedAsync()
    {
        //Message.Info("This is a Info message");
        //Message.Success("This is a Success message");
        //Message.Warn("This is a Warn message");
        //Message.Error("This is a Error message");
        //Message.Loading("This is a Loading message", o => o.Duration = 2.5).ContinueWith((result) =>
        //    {
        //        Message.Info("Loading finished", o => o.Duration = 2.5)
        //        .ContinueWith((result) =>
        //        {
        //            Message.Info("Loading finished is finished", o => o.Duration = 2.5);
        //        });
        //    }); ;

        //var task = Message.Loading("This is a Loading message", o => o.Duration =0);
        //await Task.Delay(5000);
        //task.Start();

        //MessageBox.Info("Info", "信息");
        //MessageBox.Success("Success", "成功");
        //MessageBox.Warn("Warn", "警告");
        //MessageBox.Error("Error", "错误");
        //MessageBox.Confirm("Confirm", "确认", opt =>
        //{
        //    opt.OnOk = async () => { await Task.Delay(1000); return false; };
        //    opt.OnCancel = async () => { await Task.Delay(1000); return true; };
        //});

        Alerts.Warning(
        "我们将在2023年10月23日凌晨02:00至04:00之间发生服务中断！",
        "服务中断");
        await base.OnInitializedAsync();
    }

    int? percentage = 0;

    public async Task DeleteAsync()
    {
        var dd = await MenuManager.GetMainMenuAsync();
        percentage = percentage + 10;
        await pageProgressService.Go(percentage);

        //await Message.Success( "The product 'Acme Atom Re-Arranger' has been successfully deleted."  );
    }
}
