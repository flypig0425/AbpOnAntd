@page "/"
@inherits AbpComponentBase
@inject IUiPageProgressService pageProgressService

@using Volo.Abp.UI.Navigation
@inject IMenuManager MenuManager


@*<Captcha ImagesPath="@ImagesPath" ImagesName="@ImagesName" @ref="Captcha" OnValid="@OnValid" />*@

<PageContainer Title="页面标题">
    @*<TitleTemplate><h3>Tenants @keyword</h3></TitleTemplate>*@

    <ExtraContent>
        <Button>次要按钮</Button>
        <Button>次要按钮</Button>
        <Button Type="primary">
            主要按钮
        </Button>
        <Dropdown>
            <Overlay>
                <Menu>
                    <MenuItem Key="1">下拉菜单</MenuItem>
                    <MenuItem Key="2">下拉菜单2</MenuItem>
                    <MenuItem Key="3">下拉菜单3</MenuItem>
                </Menu>
            </Overlay>
            <ChildContent>
                <Button Style="padding:0 8px">
                    <Icon Type="more"></Icon>
                </Button>
            </ChildContent>
        </Dropdown>
    </ExtraContent>

    <Footer>
        <Button>重置</Button>
        <Button Type="primary">
            提交
        </Button>
    </Footer>


    <ChildContent>
        <Button Type="@ButtonType.Primary" OnClick="@DeleteAsync">
            Open the notification box
        </Button>

        <DatePicker TValue="DateTime?" Picker="@DatePickerType.Date" />

        <Result Status="500"></Result>
    </ChildContent>
</PageContainer>




@code {
    public string ImagesPath { get; set; } = "images";
    public string ImagesName { get; set; } = "Pic.jpg";

    ///// <summary>
    /////
    ///// </summary>
    //private Captcha Captcha { get; set; }

    //private void OnValid(bool ret)
    //{
    //    var result = ret ? "成功" : "失败";
    //    Alerts.Warning($"验证码结果 -> {result}");
    //    if (ret)
    //    {
    //        Task.Run(async () =>
    //        {
    //            await Task.Delay(1000);
    //            Captcha?.Reset();
    //        });
    //    }
    //}

    protected override void OnInitialized()
    {

        Alerts.Warning(
        "We will have a service interruption between 02:00 AM and 04:00 AM at October 23, 2023!",
        "Service Interruption");
        base.OnInitialized();
    }

    int? percentage = 0;

    public async Task DeleteAsync()
    {
        var dd = await MenuManager.GetMainMenuAsync();
        percentage = percentage + 10;
        await pageProgressService.Go(percentage);

        //await Message.Success( "The product 'Acme Atom Re-Arranger' has been successfully deleted."  );
    }
}
